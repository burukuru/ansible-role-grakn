#
# Grakn - A Distributed Semantic Database
# Copyright (C) 2016  Grakn Labs Limited
#
# Grakn is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Grakn is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Grakn. If not, see <http://www.gnu.org/licenses/gpl.txt>.
#

# Internal Factory Definition
factory.internal=ai.grakn.factory.TitanHadoopInternalFactory

# Graph Computer
graph.computer=ai.grakn.graph.internal.computer.GraknSparkComputer

####################################
# Gremlin Config                   #
####################################
gremlin.graph=org.apache.tinkerpop.gremlin.hadoop.structure.HadoopGraph
gremlin.hadoop.graphInputFormat=com.thinkaurelius.titan.hadoop.formats.cassandra.CassandraInputFormat
gremlin.hadoop.graphOutputFormat=org.apache.tinkerpop.gremlin.hadoop.structure.io.gryo.GryoOutputFormat
gremlin.hadoop.jarsInDistributedCache=true
gremlin.hadoop.inputLocation=none
#gremlin.hadoop.outputLocation=/test/output
gremlin.hadoop.outputLocation=output

####################################
# Cassandra Cluster Config         #
####################################
titanmr.ioformat.conf.storage.backend=cassandra
titanmr.ioformat.conf.storage.hostname={{ storage_hostname }}
titanmr.ioformat.cf-name=edgestore

####################################
# SparkGraphComputer Configuration #
####################################
#spark.master=spark://lxd-cluster2-cassandra1:7077
spark.master={{ grakn_analytics_spark_master }}
spark.executor.memory={{ grakn_analytics_spark_executor_memory }}
spark.executor.cores={{ grakn_analytics_spark_executor_cores }}
spark.cores.max={{ grakn_analytics_spark_cores_max }}
spark.serializer=org.apache.spark.serializer.KryoSerializer
{% if grakn_analytics_spark_eventLog_enabled is defined %}
spark.eventLog.enabled={{ grakn_analytics_spark_eventLog_enabled }}
{% endif %}
{% if grakn_analytics_spark_evenLog_dir is defined %}
spark.eventLog.dir={{ grakn_analytics_spark_evenLog_dir }}
{% endif %}

####################################
# Apache Cassandra InputFormat configuration
####################################
cassandra.input.partitioner.class=org.apache.cassandra.dht.Murmur3Partitioner
cassandra.input.predicate=0c00020b0001000000000b000200000000020003000800047fffffff0000
cassandra.input.columnfamily=edgestore
cassandra.range.batch.size=4096
cassandra.thrift.framed.size_mb=1024

####################################
# Hadoop Cluster configuration     #
####################################
#fs.defaultFS=hdfs://lxd-cluster2-cassandra1:9000
{% if grakn_analytics_hdfs is defined %}
fs.defaultFS={{ grakn_analytics_hdfs }}
{% endif %}
